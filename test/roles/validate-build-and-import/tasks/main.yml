# tasks/main.yml
--- 
- name: Remove task.output
  file:
    path: ./task.output
    state: absent

- name: Make temporary workspace
  tempfile:
    path: "{{ lookup('env', 'TMPDIR')|default(omit) }}"
    state: directory
    suffix: "{{ item.name }}"
  with_items: "{{ distros }}"
  register: tempdirs
  notify: "Cleanup temp dirs"
  tags: always

- name: Make context dirs
  file:
    state: directory
    name: "{{ item.1.path }}/{{ item.0.name }}"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  tags: always

- name: Make project dirs
  file:
    state: directory
    name: "{{ item.1.path }}/test-{{ item.0.name }}"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  tags: always

- name: Render Dockerfile
  template:
    src: Dockerfile.j2
    dest: "{{ item.1.path }}/{{ item.0.name }}/Dockerfile"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  tags: always

- name: Copy build context
  synchronize:
    src: "{{ role_path }}/files/"
    dest: "{{ item.1.path }}/{{ item.0.name }}"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  tags: always

- name: Run ansible-container import
  shell: >
    ansible-container --debug --project-path
    {{ item.1.path|quote }}/test-{{ item.0.name|quote }} import
    {{ item.1.path|quote }}/{{ item.0.name|quote }} >>task.output 2>&1 
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  register: output
  ignore_errors: yes
  tags: always

- include: show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Validate import
  shell: pytest tests/validate_import.py >>task.output 2>&1
  environment:
    TO_AC: "{{ item.1.path|quote }}/test-{{ item.0.name|quote }}"
    DISTRO_DATA: "{{ item.0|to_json }}"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  register: output
  ignore_errors: yes
  tags:
    - validate_import

- include: show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Run ansible-container build
  shell: >
    ansible-container --debug --project-path
    {{ item.1.path|quote }}/test-{{ item.0.name|quote }} build --no-cache >>task.output 2>&1
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  register: output
  ignore_errors: yes
  tags:
    - build
    - build_no_validate

- include: show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Validate build
  shell: pytest tests/validate_build.py >>task.output 2>&1
  environment:
    TO_AC: "{{ item.1.path|quote }}/test-{{ item.0.name|quote }}"
    DISTRO_DATA: "{{ item.0|to_json }}"
  with_together:
    - "{{ distros }}"
    - "{{ tempdirs.results }}"
  register: output
  ignore_errors: yes
  tags:
    - build
    - validate_build

- include: show-output.yml output_file=./task.output registered_output="{{ output }}"
